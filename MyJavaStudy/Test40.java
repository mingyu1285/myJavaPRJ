package MyJavaStudy;
//2차원 배열에서 왼쪽 삼각형의 값 구하기
//(0,0)
//(1,0) (1,1)
//(2,0) (2,1) (2,2)
//(3,0) (3,1) (3,2) (3,3)
//(4,0) (4,1) (4,2) (4,3) (4,4)
//(5,0) (5,1) (5,2) (5,3) (5,4) (5,5)

// 공통점을 찾자면 행의 개수가 열의 개수와 같아질때 더하면 된다는 것이다.
public class Test40 {
    public static void main(String[] args){
        int [][] arr = { {1,2,3,4,5},
                         {6,7,8,9,10},
                         {11,12,13,14,15},
                         {16,17,18,19,20},
                         {21,22,23,24,25} };

        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j <= i; j++) { //열의 끝까지 갈 필요가 없고 i만큼만 가서 값을 저장하면 되기 때문에 이렇게 썼다.
                sum += arr[i][j]; //행과 열을 모두 sum의 값의 저장
            }

        }
        System.out.println("합계 : "+sum); //sum 값 출력
    }
}
